generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id               String      @id @default(uuid())
  name             String
  email            String      @unique
  emailVerified    DateTime?
  image            String?
  createdAt        DateTime @default(now())
  accounts         Account[]
  rooms            Room[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Room{
  id           String       @id @default(uuid())
  name         String
  slug         String       @unique
  adminId      String
  admin        User         @relation(fields:[adminId],references:[id])
  strokes      Stroke[]
  chat         Chat[]
  createdAt    DateTime     @default(now())
}

model Stroke{
  id            String       @id @default(uuid())
  strokeId      String?      @unique
  data          String
  roomId        String
  room          Room         @relation(fields: [roomId],references: [id])
  createdAt     DateTime     @default(now())
}

model Chat{
  id            String      @id @default(uuid())
  message       String
  senderName    String
  senderEmail   String
  roomId        String
  room          Room         @relation(fields: [roomId],references: [id])
  createdAt     DateTime     @default(now())
}